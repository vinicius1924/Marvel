apply plugin: 'com.android.application'

android {
  compileSdkVersion 27
  defaultConfig {
    applicationId "com.example.vinicius.marvelcharacters"
    minSdkVersion 21
    targetSdkVersion 27
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  dataBinding {
    enabled = true
  }
  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "com.android.support:appcompat-v7:$androidSupportVersion"
  /**
   * A biblioteca de suporte v4 tem que ter a mesma versão das outras bibliotecas de suporte que estao
   * sendo usadas para poder usar a biblioteca de databinding do Android
   */
  implementation "com.android.support:support-v4:$androidSupportVersion"
  implementation "com.android.support:recyclerview-v7:$androidSupportVersion"
  implementation "com.android.support:design:$androidSupportVersion"
  implementation "com.android.support:palette-v7:$androidSupportVersion"
  implementation "com.android.support:cardview-v7:$androidSupportVersion"
  implementation 'com.squareup.picasso:picasso:2.71828'
  implementation 'com.google.code.gson:gson:2.8.0'
  implementation 'com.squareup.okhttp3:okhttp:3.10.0'
  implementation 'com.squareup.retrofit2:retrofit:2.3.0'
  implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
  implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
  implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
  /**
   * Because RxAndroid releases are few and far between, it is recommended you also
   * explicitly depend on RxJava's latest version for bug fixes and new features.
   */
  implementation 'io.reactivex.rxjava2:rxjava:2.1.8'
  implementation "com.google.dagger:dagger:2.11"
  implementation "com.google.dagger:dagger-android:2.11"
  /**
   * Caso estejamos usando a biblioteca de suporte do Android devemos adicionar
   * essa biblioteca para o dagger funcionar
   */
  implementation "com.google.dagger:dagger-android-support:2.11"
  annotationProcessor "com.google.dagger:dagger-compiler:2.11"
  annotationProcessor "com.google.dagger:dagger-android-processor:2.11"
  testImplementation 'junit:junit:4.12'
  /**
   * Se os local unit tests precisam interagir com dependencias do Android,
   * deve ser incluído Mockito
   */
  testImplementation 'org.mockito:mockito-core:2.9.0'
  testImplementation "org.robolectric:robolectric:3.8"
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
